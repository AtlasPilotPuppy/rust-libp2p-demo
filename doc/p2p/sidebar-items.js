initSidebarItems({"constant":[["STORAGE_FILE_PATH",""]],"enum":[["EventType","[EventType] is an enum to handle responses from peers It contains: either the [Response(MemoResponse)] - for denoting a response from peers or the [Input(String)] - denoting an input from stdin."],["MemoMode","MemoMode is an enum that is used for matching the types of messages passed. MemoMode is used to determine how the message is processed."]],"fn":[["add_published_memo","function to add a published memo."],["create_new_memo","Create a new [Memo] entry in [Memos] and persist it to the local json."],["handle_create_memo","Handle the request to create a new [Memo] and add persist it locally."],["handle_list_memos","Handle the peer response for [Memos]."],["handle_list_peers","Log list of unique peers."],["handle_publish_memos","Handle the request to publish [Memo]"],["main","Main Tokio event loop. This handles the creation of the libp2p client, connecting to peers and handling Requests and responses."],["publish_memo","async function to publish a local [Memo] after setting its public flag."],["read_local_memos","async function to read local memos"],["respond_with_public_memos","Function to respond with public memos."],["write_local_memos","Persist [Memos] to local json."]],"static":[["KEYS",""],["PEER_ID",""],["TOPIC",""]],"struct":[["Memo","The memo type is the foundation of what is stored. Memos are persisted in a json file"],["MemoBehaviour","[MemoBehaviour] - using the derive macro to derive implementatino from [libp2p::NetworkBehaviour]. This struct is used to handle the network behaviour between peers."],["MemoRequest","Struct to denote a memo request. It contains a reference to the [MemoMode] enum. and an optional Memo object."],["MemoResponse","The MemoResponse Object contains the mode of the response and the data key contains a [Vec] of [Memos]."]],"type":[["Memos",""],["Result",""]]});